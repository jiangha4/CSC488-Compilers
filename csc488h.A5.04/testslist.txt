fail:
	expressions:
		function call:
			return in if stmt false branch



pass:
	expressions:
		anon function call:
			loop inside anon
			yields boolean
			yields int

		arithmetic:
			add consts
			arbitrarily complex
			divide consts
			multiply consts
			negate const
			subtract consts

		comparison:
			greater than
			greater than or equal
			greater than or equal2
			less than
			less than or equal
			less than or equal2

		function call:
			boolean func boolean param
			boolean func int param
			call to higher level
			call to lower level
			call to same level
			func with proc
			int func boolean param
			int func int param
			no params
			no params multiple calls

		logical:
			false and false
			false and true
			false or false
			false or true
			not false
			not true
			true and false
			true and true
			true or false
			true or true

		short circuiting:
			false and
			false or true or
			mixed and or
			true andfalse and
			true or


	statements:
		array:
			one dim array boolean
			one dim array integer
			two dim array boolean
			two dim array integer

		assignment:
			assign int const
			assign int expn

		get:
			get multiple
			get single

		loop:
			loop exit
			loop exit when
			while loop
			while loop with exit
			while loop with exit when

		procedure call:
			boolean param
			call to higher level
			call to lower level
			call to same level
			code before decl
			do fact
			int param
			multiple params
			nested procedures
			no params
			no params multi
			reassign var outside scope
			same ident diff scope

		put:
			put int const
			put int expn
			put skip
			put text

		return:
			procedure basic return
			procedure nested scope inner return
			procedure nested scope outer return
			procedure return in if
			procedure return not reached





CSC488
Assignment 5
Group 4
Group Members:
	Haohan Jiang (g3jiangh)
	Chandeep Singh (g2singh)
	Maria Yancheva (c2yanche)
	Timo Vink (c4vinkti)


Index of new classes
--------------------

src/compiler488/codegen/ActivationRecord.java
	This class is a container for all helper functions that pertain to
	Activation Records. All methods are static, and help with calculations such
	as how many blocks of memory are required to be allocated for some local
	storage, getting various offset parameters or local variables, getting
	memory sizes for variables, etc.

src/compiler488/codegen/VarAddress.java
	Very simple container class used to store lexical level and order number
	for variables.

src/compiler488/codegen/CodeGen.java
	This class implements the visitor pattern in order to traverse our
	previously generated AST and generate code for the program. More information
	can be found in CODEGEN_DESIGN.A5

src/compiler488/codegen/CodeGenHelper.java
	This is our helper class for code generation. Essentially, it contains
	methods for emitting various kinds of instructions, but instead of emitting
	straight to the machine, it adds them to the class's internal list of
	shorts. This allows us to manipulate instructions more easily during code
	generation, and all emitting/patching is done on this internal instructions
	list. When we are finished with code generation, we can simply dump this
	list of instructions straight into the machine.

	Some helpers are low-level, such as "emitPop(int)" which determines how
	many POP instructions to emit, and whether it's more efficient to use POP
	or POPN.

	Other helpers are higher-level, such as "emitActivationRecord(STScope)"
	which will emit all the instructions to emit an activation record for the
	given scope.
